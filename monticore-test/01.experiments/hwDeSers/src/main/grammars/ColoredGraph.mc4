/* (c) https://github.com/MontiCore/monticore */

grammar ColoredGraph 
              extends de.monticore.literals.MCCommonLiterals {

  symbol scope Graph = "graph" Name "{" ( Vertex | Edge )* "}" ;

  symbol Vertex = ["initial"]? "vertex" Name "(" Color ")" ";" ;

  interface Color;

  RGBColor implements Color = NatLiteral "," NatLiteral 
                              "," NatLiteral ;

  NameColor implements Color  = Name;

  Edge = s:Name@Vertex "->"  t:Name@Vertex ";" ;

  // Each Vertex has a Color (stored as object java.awt.Color) 
  // and knows whether it is initial.
  //
  // The Color attribute needs to be handled manually 
  // when creating Vertex symbols as well as when
  // loading and storing them in the handwritten VertexSymbolDeSer
  // (while the "initial" attribute is handled automatically)
  symbolrule Vertex = color:java.awt.Color initial:boolean;

  // For demonstration reasons we decide to add the number of used
  // colors in the Graph scope
  // (which is also handled automatically)
  scoperule = numberOfColors:int;

}