/* (c) https://github.com/MontiCore/monticore */
grammar Automata extends de.monticore.MCBasics {

symbol scope Automaton =
  "automaton" Name "{" (State | Transition)* "}" ;

symbol scope State =
  "state" Name
  (("<<" ["initial"] ">>" ) | ("<<" ["final"] ">>" ))*
  ( ("{" (State | Transition)* "}") | ";") ;

Transition =
  from:Name "-" input:Name ">" to:Name ";" ;

ActTransition extends Transition =
  from:Name "-" input:Name "/" action:Name ">" to:Name ";" ;

ActState extends State =
   "state" Name
  ("entry:" entry:Name)?
  ("exit:" exit:Name)?
  (("<<" ["initial"] ">>" ) | ("<<" ["final"] ">>" ))*
  ( ("{" (State | Transition)* "}") | ";") ;

}
