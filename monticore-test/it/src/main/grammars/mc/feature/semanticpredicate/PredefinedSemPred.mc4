/* (c) https://github.com/MontiCore/monticore */

package mc.feature.semanticpredicate;

grammar PredefinedSemPred extends mc.common.Basics {

  // noSpace: "foo" "::" "foo";
  A = "foo" ":" ":" {noSpace()}? "foo";
  
  B = "foo" ":" ":" "foo" {noSpace(-2)}?;
  
  C = {noSpace(3)}? "foo" ":" ":" "foo";
  
  // is/next/cmpToken: "foo" ":";
  D = {next("foon")}? Name ":";

  E = Name {is("foon")}? ":";

  F = {cmpToken(1, "foon")}? Name ":";

  G = Name ":" {cmpToken(-2, "foon")}?;

  // cmpTokenRegEx: ("foon"|"FOO") ":";
  H = {cmpTokenRegEx(1, "foon|FOO")}? Name ":";

  I = Name ":" {cmpTokenRegEx(-2, "foon|FOO")}?;

  // cmpToken (list): "foon"|"FOO") ":";
  J = Name ":" {cmpToken(-2, "foon", "FOO")}?;
}
