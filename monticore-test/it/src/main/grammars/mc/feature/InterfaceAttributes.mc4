/* (c) https://github.com/MontiCore/monticore */

package mc.feature;

component grammar InterfaceAttributes  extends mc.grammar.lexicals.ItTestLexicals {

   interface Prod;

    /** Used for embedding actions */
  external Action;

  astrule Prod =
    Name ;

     interface ParserProd extends Prod;

  MCGrammar =
    (["component"])? "grammar" Name

      "{"
         (
              |
           LexProd
         |
           ClassProd

         )*
      "}" ;

  LexProd implements Prod =
    (["fragment"] | ["comment"]  )*
    ("token") Name
    (
      (
        ("{" initAction:Action "}")? // Statements
      |
        "{" initAction:Action "}"
      )?

      (":" ("{" endAction:Action  "}")? (variable:Name&
        ("->" type:Name+ (":" "{" block:Action "}" )? )? )? // Statements
      )?
    )
    ";";

  ClassProd implements ParserProd =
    Name

    ("{" Action "}")?    // Statements
  ";";

  astrule ClassProd =
    method public String toString() { return name; } ;

 }
