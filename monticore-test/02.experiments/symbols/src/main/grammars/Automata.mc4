/* (c) https://github.com/MontiCore/monticore */

grammar Automata extends de.monticore.literals.MCCommonLiterals {

  symbol scope Automaton =
    "automaton" Name "{" (State | Transition)* "}" ;

  symbol scope State =
    "state" Name

    (("<<" ["initial"] ">>" ) | ("<<" ["final"] ">>" ))*

    ( ("{" (State | Transition | Counter)* "}") | ";") ;

  Transition =
    source:Name@State "-" input:Name ("|" Statement)? ">"
                             target:Name@State ";" ;

  symbol Counter = "counter" Name "=" NatLiteral ";" ;

  interface Statement ;

  Print implements Statement = "?" Name ;

  Increment implements Statement = "++" Name ;
}

